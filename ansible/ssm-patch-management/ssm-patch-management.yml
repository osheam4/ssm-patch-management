---
- name: Get a list of AZs
  aws_az_info:
      filters:
        region-name: '{{ aws_region }}'
  register: aws_region_facts

- debug: msg='{{ item['zone_name'] }}'
  with_items: "{{ aws_region_facts['availability_zones'] }}"

# SSM parameters cant begin with ssm or aws....... so i appended the word timestamp.
- name: Create a once off unique identifier - for bucket names
  vars:
    uniqueidentifier: '{{ ansible_date_time.epoch }}'
  aws_ssm_parameter_store:
    region: '{{ aws_region }}'
    name: 'timestamp-{{ project }}-uniqueidentifier'
    value: "{{ uniqueidentifier }}"
    overwrite_value: never

- name: lookup the unique key from ssm
  set_fact:
    uniqueidentifier: "{{ lookup('aws_ssm', 'timestamp-{{ project }}-uniqueidentifier') }}"

- name: Create S3 Logs Bucket
  cloudformation:
    stack_name: '{{ project }}-s3-logs-bucket'
    state: present
    region: '{{ aws_region }}'
    template: '../cloudformation/{{ project }}/40_data/s3LogsBucket.yaml'
    tags:
      Component: 'SSM Patching S3 Logs'
      Project: '{{ project }}'
    template_parameters:
      BucketName: '{{ project | lower }}-{{ uniqueidentifier }}-logs'

- name: Create Lambda Function for tagging instances
  cloudformation:
    stack_name: '{{ project }}-LambdaTaggingFunction'
    state: present
    region: '{{ aws_region }}'
    template: '../cloudformation/{{ project }}/90_app/LambdaTaggingFunction.yaml'
    tags:
      Component: 'SSM PatchingTask'
      Project: '{{ project }}'
    template_parameters:
      Project: '{{ project }}'

- name: Create SSM Maintenance group and tasks
  cloudformation:
    stack_name: "{{ project }}-MaintenanceWindows-{{ item['zone_name'] }}"
    state: present
    region: '{{ aws_region }}'
    template: '../cloudformation/{{ project }}/90_app/SSMMaintenanceWindows.yaml'
    tags:
      Component: 'SSM PatchingTask'
      Project: '{{ project }}'
    template_parameters:
      ProjectLower: '{{ project | lower }}'
      AvailabilityZone: "{{ item['zone_name'] }}"
      BucketName: '{{ project | lower }}-{{ uniqueidentifier }}-logs'
      DayIndex: '{{ index_var }}'
  with_items: "{{ aws_region_facts['availability_zones'] }}"
  loop_control:
    index_var: index_var


